spring.application.name=customer-app
server.port=8099
spring.datasource.url=jdbc:h2:mem:customers-db
spring.h2.console.enabled=true

#Provider Google Oauth2

spring.security.oauth2.client.registration.google.clientId=99977032089-h1ps306gp8iv5mim58k662o1ornlncbn.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.provider.google.user-name-attribute=email


#Provider GitHub Oauth2

spring.security.oauth2.client.registration.github.clientId=dfb4b83707cb42de3a45
spring.security.oauth2.client.registration.github.client-secret=49136075855a1fb1da8e977de120bad4fb2cbbc7
spring.security.oauth2.client.provider.github.user-name-attribute=login



#Provider Keycloak Oauth2

spring.security.oauth2.client.registration.keycloak.client-name=keycloak
spring.security.oauth2.client.registration.keycloak.client-id=sdia-customer-client
spring.security.oauth2.client.registration.keycloak.client-secret=g3ERM52g498sDokpSBQASmWATk68TZkp
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email,offline_access
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.redirect-uri=http://localhost:8099/login/oauth2/code/sdia-customer-client
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8080/realms/sdia-realm

spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username
#spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/ebank-realm